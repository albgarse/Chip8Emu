/* Chip8Emu
 * Memory map
 */
#include <cstddef>
#include <cstdint>
#include <iostream>
#include "constants.h"

class Memory {

private:
    // main memory
    // - stack starts at 0x0 to 0xF
    // - charset is located at 0x100 (CHARSET_BASE)
    std::byte memory[0xFFF] {};

    uint8_t charset[80] =	{ 
    0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
    0x20, 0x60, 0x20, 0x20, 0x70, // 1
    0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
    0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
    0x90, 0x90, 0xF0, 0x10, 0x10, // 4
    0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
    0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
    0xF0, 0x10, 0x20, 0x40, 0x40, // 7
    0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
    0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
    0xF0, 0x90, 0xF0, 0x90, 0x90, // A
    0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
    0xF0, 0x80, 0x80, 0x80, 0xF0, // C
    0xE0, 0x90, 0x90, 0x90, 0xE0, // D
    0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
    0xF0, 0x80, 0xF0, 0x80, 0x80};// F

    
public:
    Memory();
    std::byte read_byte(const MEM_ADDR& addr) const;
    void write_byte(const MEM_ADDR& addr, const std::byte& data);
    MEM_WORD read_word(const MEM_ADDR& addr) const;
    void write_word(const MEM_ADDR& addr, const MEM_WORD& data);
};